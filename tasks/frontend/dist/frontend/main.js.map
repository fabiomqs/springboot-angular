{"version":3,"sources":["./src/app/notification/service/notification.service.ts","./src/app/model/task.ts","./src/environments/environment.ts","./src/app/tasks/tasks-list/tasks-list.component.html","./src/app/tasks/tasks-list/tasks-list.component.ts","./src/app/tokens/tokens.ts","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/tasks/service/task.service.ts","./src/app/tasks/tasks-add/tasks-add.component.ts","./src/app/tasks/tasks-add/tasks-add.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/notification/notification.module.ts","./src/app/app.module.ts","./src/app/enums/notification-type.enum.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { NotificationType } from '../../enums/notification-type.enum';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class NotificationService {\r\n\r\n    constructor(private notifier:NotifierService) { }\r\n\r\n    private notify(type: NotificationType, message: string): void {\r\n        this.notifier.notify(type, message);\r\n    }\r\n\r\n    default(message: string):void {\r\n        if(message)\r\n            this.notify(NotificationType.DEFAULT, message);\r\n        else\r\n            this.error(message);\r\n    }\r\n\r\n    success(message: string):void {\r\n        if(message)\r\n            this.notify(NotificationType.SUCCESS, message);\r\n        else\r\n            this.error(message);\r\n    }\r\n\r\n    info(message: string):void {\r\n        if(message)\r\n            this.notify(NotificationType.INFO, message);\r\n        else\r\n            this.error(message);\r\n    }\r\n\r\n    warning(message: string):void {\r\n        if(message)\r\n            this.notify(NotificationType.WARNING, message);\r\n        else\r\n            this.error(message);\r\n    }\r\n\r\n    error(message: string):void {\r\n        if(message)\r\n            this.notify(NotificationType.ERROR, message);\r\n        else\r\n            this.notify(NotificationType.ERROR, 'An Unknow error has occurred!');\r\n    }\r\n\r\n}\r\n","export class Task {\r\n    id: number;\r\n    name: string;\r\n    dueDate: string;\r\n    completed: boolean;\r\n\r\n    constructor(name: string, dueDate: string) {\r\n        this.name = name;\r\n        this.dueDate = dueDate;\r\n        this.completed = false;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:8080',\n    logUrl: 'http://localhost:8081',\n    pageSize: 20,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<ul class=\"list-group\">\n    <li *ngFor=\"let task of tasks\" class=\"list-group-item\">\n        <div class=\"task-checkbox\">\n            <input type=\"checkbox\"\n                   class=\"list-child\"\n                   (change)=\"onTaskChange($event,task)\"\n                   [checked]=\"task.completed\">\n            <span ngClass=\"{{task.completed ? 'name completed' : 'name'}}\">{{ task.name }}</span>\n            <span class=\"label {{ getDueDateLabel(task) }} pull-right\"> {{ task.dueDate }}</span>\n        </div>\n    </li>\n\n</ul>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { NotificationService } from 'src/app/notification/service/notification.service';\nimport { TaskService } from '../service/task.service';\n\n\n@Component({\n    selector: 'app-tasks-list',\n    templateUrl: './tasks-list.component.html',\n    styleUrls: ['./tasks-list.component.css']\n})\nexport class TasksListComponent implements OnInit {\n\n    tasks:Task[] = [];\n\n    constructor(\n        private taskService: TaskService,\n        private notificationService: NotificationService\n    ) { }\n\n    ngOnInit(): void {\n        this.taskService.listTasks().subscribe(\n            resp => this.tasks = resp,\n            err => this.handleError(err)\n        )\n        this.taskService.onTaskAdded()\n            .subscribe(\n                (task: Task) => this.tasks.push(task)\n            );\n    }\n\n    getDueDateLabel(task: Task){\n        return task.completed ? 'label-success' : 'label-primary';\n    }\n\n    onTaskChange(event, task: Task) {\n        if(event?.target?.checked)\n            task.completed = event.target.checked;\n        else\n            task.completed = !task.completed;\n        this.taskService.saveTask(task).subscribe(\n            resp => {},\n            err => this.handleError(err)\n        )\n    }\n\n    private handleError(error) {\n        console.log(error);\n        this.notificationService.error(error.error.message);\n    }\n\n}\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const APIURL = new InjectionToken<string>('');\r\nexport const LOGURL = new InjectionToken<string>('');\r\nexport const PAGESIZE = new InjectionToken<number>('');","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-2\">&nbsp;</div>\n    <div class=\"col-md-8\">\n        <div id=\"tasksPanel\" class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n                <h3 class=\"panel-title\">Angular 4 Java Developers Tasks</h3>\n            </div>\n            <div class=\"panel-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <app-tasks-add></app-tasks-add>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <app-tasks-list></app-tasks-list>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-2\">&nbsp;</div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Task } from 'src/app/model/task';\nimport { APIURL } from 'src/app/tokens/tokens';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskService {\n\n    private _onTaskAdded = new EventEmitter<Task>();\n\n    constructor(\n        private http:HttpClient,\n        @Inject(APIURL) private apiUrl: string\n    ) { }\n\n    listTasks():Observable<Task[]> {\n        return this.http\n            .get<Task[]>(`${this.apiUrl}/api/tasks`)\n    }\n\n    saveTask(task: Task):Observable<Task> {\n        return this.http\n            .post<Task>(`${this.apiUrl}/api/tasks/save`, task)\n    }\n\n    emitTask(task: Task) {\n        this._onTaskAdded.emit(task);\n    }\n\n    onTaskAdded() {\n        return this._onTaskAdded;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { NotificationService } from 'src/app/notification/service/notification.service';\nimport { TaskService } from '../service/task.service';\n\n@Component({\n  selector: 'app-tasks-add',\n  templateUrl: './tasks-add.component.html',\n  styleUrls: ['./tasks-add.component.css']\n})\nexport class TasksAddComponent implements OnInit {\n\n    addTaskValue: string = null;\n\n    constructor(\n        private taskService: TaskService,\n        private notificationService: NotificationService\n    ) { }\n\n    ngOnInit(): void {\n    }\n\n    onTaskAdd(event) {\n        let task = new Task(event.target.value, this.getTodayAsString());\n        this.taskService.saveTask(task).subscribe(\n            (newTask: Task) => {\n                this.addTaskValue = '';\n                this.taskService.emitTask(newTask);\n            },\n            err => this.handleError(err)\n        )\n    }\n\n    getTodayAsString() {\n        let today = new Date();\n        let dd: any = today.getDate();\n        let mm: any = today.getMonth() + 1;\n        let yyyy = today.getFullYear();\n\n        if (dd < 10) {\n            dd = '0' + dd;\n        }\n        if (mm < 10) {\n            mm = '0' + mm;\n        }\n\n        return mm + '/' + dd + '/' + yyyy;\n    }\n\n    private handleError(error) {\n        console.log(error);\n        this.notificationService.error(error.error.message);\n    }\n\n}\n","<div class=\"form-group\">\n    <input type=\"text\"\n           class=\"form-control\"\n           placeholder=\"Add New Task\"\n           (keyup.enter)=\"onTaskAdd($event)\"\n           [(ngModel)]=\"addTaskValue\"/>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n    constructor() { }\n}\n","<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n<notifier-container></notifier-container>\n","import { NgModule } from '@angular/core';\r\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\r\n\r\nconst customNotifierOptions: NotifierOptions = {\r\n    position: {\r\n        horizontal: {\r\n            position: 'left',\r\n            distance: 20\r\n        },\r\n        vertical: {\r\n            position: 'top',\r\n            distance: 12,\r\n            gap: 10\r\n        }\r\n    },\r\n    theme: 'material',\r\n    behaviour: {\r\n        autoHide: 5000,\r\n        onClick: 'hide',\r\n        onMouseover: 'pauseAutoHide',\r\n        showDismissButton: true,\r\n        stacking: 4\r\n    },\r\n    animations: {\r\n        enabled: true,\r\n        show: {\r\n            preset: 'slide',\r\n            speed: 300,\r\n            easing: 'ease'\r\n        },\r\n        hide: {\r\n            preset: 'fade',\r\n            speed: 300,\r\n            easing: 'ease',\r\n            offset: 50\r\n        },\r\n        shift: {\r\n            speed: 300,\r\n            easing: 'ease'\r\n        },\r\n        overlap: 150\r\n    }\r\n};\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    exports:[\r\n        NotifierModule\r\n    ],\r\n    imports: [\r\n        NotifierModule.withConfig(customNotifierOptions)\r\n    ],\r\n\r\n})\r\nexport class NotificationModule { }\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TasksAddComponent } from './tasks/tasks-add/tasks-add.component';\nimport { TasksListComponent } from './tasks/tasks-list/tasks-list.component';\n\nimport { NotificationModule } from './notification/notification.module';\nimport { FormsModule } from '@angular/forms';\nimport { APIURL, LOGURL, PAGESIZE } from './tokens/tokens';\nimport { environment } from 'src/environments/environment';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        TasksComponent,\n        TasksAddComponent,\n        TasksListComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        NotificationModule,\n        FormsModule,\n        HttpClientModule\n    ],\n    providers: [\n        {provide: APIURL, useValue: environment.apiUrl},\n        {provide: LOGURL, useValue: environment.logUrl},\n        {provide: PAGESIZE, useValue: environment.pageSize}, \n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum NotificationType {\r\n    DEFAULT = 'default',\r\n    SUCCESS = 'success',\r\n    INFO = 'info',\r\n    WARNING = 'warning',\r\n    ERROR = 'error'\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TasksComponent } from './tasks/tasks.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        component: TasksComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}